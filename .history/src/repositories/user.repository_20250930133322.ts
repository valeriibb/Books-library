import prisma from '../config/prisma';
import { Prisma, User } from '@prisma/client';

// –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–≤–∏–∫–ª—é—á–∞—î–º–æ ID, –¥–æ–¥–∞—î–º–æ –ø–∞—Ä–æ–ª—å)
export type CreateUserDto = Omit<User, 'id' | 'createdAt' | 'updatedAt' | 'role' | 'isActive' | 'borrowedBooks' | 'reviews' | 'reservations' | 'favorites' | 'notifications' | 'phone' | 'avatar'> & { password: string };

export const createUser = async (data: CreateUserDto): Promise<User> => {
  return prisma.user.create({
    data: {
      email: data.email,
      password: data.password, // –ü–∞—Ä–æ–ª—å –≤–∂–µ –º–∞—î –±—É—Ç–∏ —Ö–µ—à–æ–≤–∞–Ω–∏–º
      firstName: data.firstName,
      lastName: data.lastName,
    },
  });
};

export const findUserByEmail = async (email: string): Promise<User | null> => {
  return prisma.user.findUnique({
    where: { email },
  });
};

export const findUserById = async (id: string) => {
    return prisma.user.findUnique({
      where: { id },
      // üí° –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ: —Ç—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∏–±—Ä–∞—Ç–∏, —è–∫—ñ –ø–æ–ª—è –ø–æ–≤–µ—Ä–Ω—É—Ç–∏, 
      // —â–æ–± –Ω–µ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ö–µ—à –ø–∞—Ä–æ–ª—è
      select: {
        id: true,
        email: true,
        firstName: true,
        lastName: true,
        role: true,
        avatar: true,
        phone: true,
        isActive: true,
        createdAt: true,
        updatedAt: true,
      }
    });
  };
