import { PrismaClient, UserRole, BookStatus } from '@prisma/client';
import * as bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Starting seed for online library...');

  // –û—á–∏—â–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–∏–∑-–∑–∞ foreign keys)
  await prisma.notification.deleteMany();
  await prisma.favoriteBook.deleteMany();
  await prisma.review.deleteMany();
  await prisma.reservation.deleteMany();
  await prisma.borrowedBook.deleteMany();
  await prisma.bookGenre.deleteMany();
  await prisma.book.deleteMany();
  await prisma.genre.deleteMany();
  await prisma.category.deleteMany();
  await prisma.author.deleteMany();
  await prisma.user.deleteMany();

  console.log('üóëÔ∏è Database cleaned');

  // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categories = await Promise.all([
    prisma.category.create({
      data: {
        name: '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞',
        description: '–†–æ–º–∞–Ω—ã, —Ä–∞—Å—Å–∫–∞–∑—ã, –ø–æ—ç–∑–∏—è'
      }
    }),
    prisma.category.create({
      data: {
        name: '–ù–∞—É—á–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞',
        description: '–ù–∞—É—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è'
      }
    }),
    prisma.category.create({
      data: {
        name: '–§—ç–Ω—Ç–µ–∑–∏ –∏ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞',
        description: '–§–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è'
      }
    }),
    prisma.category.create({
      data: {
        name: '–î–µ—Ç–µ–∫—Ç–∏–≤—ã –∏ —Ç—Ä–∏–ª–ª–µ—Ä—ã',
        description: '–î–µ—Ç–µ–∫—Ç–∏–≤–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏ —Ç—Ä–∏–ª–ª–µ—Ä—ã'
      }
    }),
    prisma.category.create({
      data: {
        name: '–ë–∏–æ–≥—Ä–∞—Ñ–∏–∏',
        description: '–ë–∏–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ª—é–¥–µ–π'
      }
    }),
    prisma.category.create({
      data: {
        name: '–ù–∞—É–∫–∞ –∏ —Ç–µ—Ö–Ω–∏–∫–∞',
        description: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏ –Ω–∞—É—á–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞'
      }
    })
  ]);

  console.log('üìö Categories created');

  // –°–æ–∑–¥–∞–µ–º –∂–∞–Ω—Ä—ã
  const genres = await Promise.all([
    prisma.genre.create({
      data: {
        name: '–†–æ–º–∞–Ω',
        description: '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –±–æ–ª—å—à–æ–≥–æ –æ–±—ä–µ–º–∞'
      }
    }),
    prisma.genre.create({
      data: {
        name: '–ü–æ—ç–∑–∏—è',
        description: '–°—Ç–∏—Ö–æ—Ç–≤–æ—Ä–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è'
      }
    }),
    prisma.genre.create({
      data: {
        name: '–î—Ä–∞–º–∞',
        description: '–î—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è'
      }
    }),
    prisma.genre.create({
      data: {
        name: '–§—ç–Ω—Ç–µ–∑–∏',
        description: '–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤ –∂–∞–Ω—Ä–µ —Ñ—ç–Ω—Ç–µ–∑–∏'
      }
    }),
    prisma.genre.create({
      data: {
        name: '–ù–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞',
        description: '–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞ —Å –Ω–∞—É—á–Ω—ã–º —É–∫–ª–æ–Ω–æ–º'
      }
    }),
    prisma.genre.create({
      data: {
        name: '–î–µ—Ç–µ–∫—Ç–∏–≤',
        description: '–î–µ—Ç–µ–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è'
      }
    }),
    prisma.genre.create({
      data: {
        name: '–¢—Ä–∏–ª–ª–µ—Ä',
        description: '–¢—Ä–∏–ª–ª–µ—Ä—ã –∏ —Å–∞—Å–ø–µ–Ω—Å'
      }
    }),
    prisma.genre.create({
      data: {
        name: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π',
        description: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è'
      }
    }),
    prisma.genre.create({
      data: {
        name: '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è',
        description: '–ü—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞'
      }
    })
  ]);

  console.log('üé≠ Genres created');

  // –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ—Ä–æ–≤
  const authors = await Promise.all([
    prisma.author.create({
      data: {
        firstName: '–î–∂–æ—Ä–¥–∂',
        lastName: '–û—Ä—É—ç–ª–ª',
        bio: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π –ø–∏—Å–∞—Ç–µ–ª—å –∏ –∂—É—Ä–Ω–∞–ª–∏—Å—Ç',
        nationality: '–ë—Ä–∏—Ç–∞–Ω—Å–∫–∏–π',
        birthDate: new Date('1903-06-25'),
        deathDate: new Date('1950-01-21'),
      }
    }),
    prisma.author.create({
      data: {
        firstName: '–î–∂–æ–∞–Ω',
        lastName: '–†–æ—É–ª–∏–Ω–≥',
        bio: '–ë—Ä–∏—Ç–∞–Ω—Å–∫–∞—è –ø–∏—Å–∞—Ç–µ–ª—å–Ω–∏—Ü–∞, –∞–≤—Ç–æ—Ä —Å–µ—Ä–∏–∏ —Ä–æ–º–∞–Ω–æ–≤ –æ –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä–µ',
        nationality: '–ë—Ä–∏—Ç–∞–Ω—Å–∫–∏–π',
        birthDate: new Date('1965-07-31'),
      }
    }),
    prisma.author.create({
      data: {
        firstName: '–°—Ç–∏–≤–µ–Ω',
        lastName: '–ö–∏–Ω–≥',
        bio: '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –ø–∏—Å–∞—Ç–µ–ª—å, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –≤ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –∂–∞–Ω—Ä–∞—Ö',
        nationality: '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π',
        birthDate: new Date('1947-09-21'),
      }
    }),
    prisma.author.create({
      data: {
        firstName: '–ê–≥–∞—Ç–∞',
        lastName: '–ö—Ä–∏—Å—Ç–∏',
        bio: '–ê–Ω–≥–ª–∏–π—Å–∫–∞—è –ø–∏—Å–∞—Ç–µ–ª—å–Ω–∏—Ü–∞, –º–∞—Å—Ç–µ—Ä –¥–µ—Ç–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∂–∞–Ω—Ä–∞',
        nationality: '–ë—Ä–∏—Ç–∞–Ω—Å–∫–∏–π',
        birthDate: new Date('1890-09-15'),
        deathDate: new Date('1976-01-12'),
      }
    }),
    prisma.author.create({
      data: {
        firstName: '–î–∂–æ–Ω',
        lastName: '–¢–æ–ª–∫–∏–Ω',
        bio: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π –ø–∏—Å–∞—Ç–µ–ª—å –∏ —Ñ–∏–ª–æ–ª–æ–≥, –∞–≤—Ç–æ—Ä "–í–ª–∞—Å—Ç–µ–ª–∏–Ω–∞ –∫–æ–ª–µ—Ü"',
        nationality: '–ë—Ä–∏—Ç–∞–Ω—Å–∫–∏–π',
        birthDate: new Date('1892-01-03'),
        deathDate: new Date('1973-09-02'),
      }
    })
  ]);

  console.log('‚úçÔ∏è Authors created');

  // –°–æ–∑–¥–∞–µ–º –∫–Ω–∏–≥–∏
  const books = await Promise.all([
    prisma.book.create({
      data: {
        title: '1984',
        isbn: '978-5-699-41355-6',
        description: '–†–æ–º–∞–Ω-–∞–Ω—Ç–∏—É—Ç–æ–ø–∏—è, –∏–∑–æ–±—Ä–∞–∂–∞—é—â–∏–π —Ç–æ—Ç–∞–ª–∏—Ç–∞—Ä–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ',
        publicationYear: 1949,
        publisher: 'Secker & Warburg',
        language: '–†—É—Å—Å–∫–∏–π',
        pages: 328,
        totalCopies: 5,
        availableCopies: 5,
        authorId: authors[0].id,
        categoryId: categories[0].id,
      }
    }),
    prisma.book.create({
      data: {
        title: '–°–∫–æ—Ç–Ω—ã–π –¥–≤–æ—Ä',
        isbn: '978-5-389-06270-9',
        description: '–°–∞—Ç–∏—Ä–∏—á–µ—Å–∫–∞—è –ø–æ–≤–µ—Å—Ç—å-–ø—Ä–∏—Ç—á–∞ –æ —Ä–µ–≤–æ–ª—é—Ü–∏–∏',
        publicationYear: 1945,
        publisher: 'Secker & Warburg',
        language: '–†—É—Å—Å–∫–∏–π',
        pages: 144,
        totalCopies: 3,
        availableCopies: 3,
        authorId: authors[0].id,
        categoryId: categories[0].id,
      }
    }),
    prisma.book.create({
      data: {
        title: '–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –∫–∞–º–µ–Ω—å',
        isbn: '978-5-389-07435-1',
        description: '–ü–µ—Ä–≤–∞—è –∫–Ω–∏–≥–∞ —Å–µ—Ä–∏–∏ –æ —é–Ω–æ–º –≤–æ–ª—à–µ–±–Ω–∏–∫–µ –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä–µ',
        publicationYear: 1997,
        publisher: 'Bloomsbury',
        language: '–†—É—Å—Å–∫–∏–π',
        pages: 432,
        totalCopies: 8,
        availableCopies: 8,
        authorId: authors[1].id,
        categoryId: categories[2].id,
      }
    }),
    prisma.book.create({
      data: {
        title: '–û–Ω–æ',
        isbn: '978-5-17-090765-4',
        description: '–†–æ–º–∞–Ω —É–∂–∞—Å–æ–≤ –æ –¥—Ä–µ–≤–Ω–µ–º –∑–ª–µ, —Ç–µ—Ä—Ä–æ—Ä–∏–∑–∏—Ä—É—é—â–µ–º –≥–æ—Ä–æ–¥',
        publicationYear: 1986,
        publisher: 'Viking Press',
        language: '–†—É—Å—Å–∫–∏–π',
        pages: 1248,
        totalCopies: 4,
        availableCopies: 4,
        authorId: authors[2].id,
        categoryId: categories[3].id,
      }
    }),
    prisma.book.create({
      data: {
        title: '–£–±–∏–π—Å—Ç–≤–æ –≤ –í–æ—Å—Ç–æ—á–Ω–æ–º —ç–∫—Å–ø—Ä–µ—Å—Å–µ',
        isbn: '978-5-699-80666-7',
        description: '–î–µ—Ç–µ–∫—Ç–∏–≤–Ω—ã–π —Ä–æ–º–∞–Ω —Å –≠—Ä–∫—é–ª–µ–º –ü—É–∞—Ä–æ',
        publicationYear: 1934,
        publisher: 'Collins Crime Club',
        language: '–†—É—Å—Å–∫–∏–π',
        pages: 256,
        totalCopies: 6,
        availableCopies: 6,
        authorId: authors[3].id,
        categoryId: categories[3].id,
      }
    }),
    prisma.book.create({
      data: {
        title: '–í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü: –ë—Ä–∞—Ç—Å—Ç–≤–æ –∫–æ–ª—å—Ü–∞',
        isbn: '978-5-389-08345-2',
        description: '–ü–µ—Ä–≤–∞—è —á–∞—Å—Ç—å —ç–ø–∏—á–µ—Å–∫–æ–π —Ç—Ä–∏–ª–æ–≥–∏–∏ –æ –°—Ä–µ–¥–∏–∑–µ–º—å–µ',
        publicationYear: 1954,
        publisher: 'Allen & Unwin',
        language: '–†—É—Å—Å–∫–∏–π',
        pages: 576,
        totalCopies: 7,
        availableCopies: 7,
        authorId: authors[4].id,
        categoryId: categories[2].id,
      }
    })
  ]);

  console.log('üìñ Books created');

  // –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑–∏ –∫–Ω–∏–≥ —Å –∂–∞–Ω—Ä–∞–º–∏
  await prisma.bookGenre.createMany({
    data: [
      { bookId: books[0].id, genreId: genres[0].id }, // 1984 - –†–æ–º–∞–Ω
      { bookId: books[0].id, genreId: genres[2].id }, // 1984 - –î—Ä–∞–º–∞
      { bookId: books[1].id, genreId: genres[0].id }, // –°–∫–æ—Ç–Ω—ã–π –¥–≤–æ—Ä - –†–æ–º–∞–Ω
      { bookId: books[1].id, genreId: genres[2].id }, // –°–∫–æ—Ç–Ω—ã–π –¥–≤–æ—Ä - –î—Ä–∞–º–∞
      { bookId: books[2].id, genreId: genres[3].id }, // –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä - –§—ç–Ω—Ç–µ–∑–∏
      { bookId: books[2].id, genreId: genres[8].id }, // –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä - –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è
      { bookId: books[3].id, genreId: genres[6].id }, // –û–Ω–æ - –¢—Ä–∏–ª–ª–µ—Ä
      { bookId: books[4].id, genreId: genres[5].id }, // –£–±–∏–π—Å—Ç–≤–æ –≤ –í–æ—Å—Ç–æ—á–Ω–æ–º —ç–∫—Å–ø—Ä–µ—Å—Å–µ - –î–µ—Ç–µ–∫—Ç–∏–≤
      { bookId: books[5].id, genreId: genres[3].id }, // –í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü - –§—ç–Ω—Ç–µ–∑–∏
      { bookId: books[5].id, genreId: genres[8].id }, // –í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü - –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è
    ],
  });

  console.log('üîó Book genres linked');

  // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª–∏
  const adminPassword = await bcrypt.hash('admin123', 12);
  const userPassword = await bcrypt.hash('user123', 12);
  const librarianPassword = await bcrypt.hash('lib123', 12);

  // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const users = await Promise.all([
    prisma.user.create({
      data: {
        email: 'admin@library.com',
        password: adminPassword,
        firstName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        lastName: '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏',
        role: UserRole.ADMIN,
      }
    }),
    prisma.user.create({
      data: {
        email: 'user@library.com',
        password: userPassword,
        firstName: '–¢–µ—Å—Ç–æ–≤—ã–π',
        lastName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        role: UserRole.READER,
      }
    }),
    prisma.user.create({
      data: {
        email: 'librarian@library.com',
        password: librarianPassword,
        firstName: '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å',
        lastName: '–ì–ª–∞–≤–Ω—ã–π',
        role: UserRole.LIBRARIAN,
      }
    }),
    prisma.user.create({
      data: {
        email: 'reader@library.com',
        password: await bcrypt.hash('reader123', 12),
        firstName: '–ê–ª–µ–∫—Å–µ–π',
        lastName: '–ß–∏—Ç–∞—Ç–µ–ª—å',
        role: UserRole.READER,
      }
    })
  ]);

  console.log('üë• Users created');

  // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–∑—ã–≤–æ–≤
  await prisma.review.createMany({
    data: [
      {
        userId: users[1].id,
        bookId: books[0].id,
        rating: 5,
        comment: '–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–∞—è –∞–Ω—Ç–∏—É—Ç–æ–ø–∏—è! –ê–∫—Ç—É–∞–ª—å–Ω–æ –∏ —Å–µ–≥–æ–¥–Ω—è.',
        isApproved: true,
      },
      {
        userId: users[1].id,
        bookId: books[2].id,
        rating: 4,
        comment: '–û—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—á–∞–ª–æ —Å–µ—Ä–∏–∏, —á–∏—Ç–∞–µ—Ç—Å—è –Ω–∞ –æ–¥–Ω–æ–º –¥—ã—Ö–∞–Ω–∏–∏.',
        isApproved: true,
      },
      {
        userId: users[3].id,
        bookId: books[4].id,
        rating: 5,
        comment: '–ö–ª–∞—Å—Å–∏–∫–∞ –¥–µ—Ç–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∂–∞–Ω—Ä–∞. –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Ä–∞–∑–≤—è–∑–∫–∞!',
        isApproved: true,
      },
    ],
  });

  console.log('üí¨ Reviews created');

  // –°–æ–∑–¥–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏
  await prisma.favoriteBook.createMany({
    data: [
      { userId: users[1].id, bookId: books[0].id },
      { userId: users[1].id, bookId: books[2].id },
      { userId: users[3].id, bookId: books[4].id },
      { userId: users[3].id, bookId: books[5].id },
    ],
  });

  console.log('‚≠ê Favorite books added');

  // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  await prisma.notification.createMany({
    data: [
      {
        userId: users[1].id,
        type: 'SYSTEM_ANNOUNCEMENT',
        title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É!',
        message: '–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π –æ–Ω–ª–∞–π–Ω –±–∏–±–ª–∏–æ—Ç–µ–∫–µ.',
        isRead: false,
      },
      {
        userId: users[1].id,
        type: 'DUE_DATE_REMINDER',
        title: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫–Ω–∏–≥–∏',
        message: '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É "1984" –¥–æ 25 –¥–µ–∫–∞–±—Ä—è.',
        isRead: true,
      },
    ],
  });

  console.log('üîî Notifications created');

  console.log('‚úÖ Seed completed successfully!');
  console.log('');
  console.log('üìä Created data summary:');
  console.log(`   üìö Categories: ${categories.length}`);
  console.log(`   üé≠ Genres: ${genres.length}`);
  console.log(`   ‚úçÔ∏è Authors: ${authors.length}`);
  console.log(`   üìñ Books: ${books.length}`);
  console.log(`   üë• Users: ${users.length}`);
  console.log('');
  console.log('üîë Test users:');
  console.log('   Admin: admin@library.com / admin123');
  console.log('   Librarian: librarian@library.com / lib123');
  console.log('   User: user@library.com / user123');
  console.log('   Reader: reader@library.com / reader123');
}

main()
  .catch((e) => {
    console.error('‚ùå Seed failed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });